'use strict';
// generated by ai fixed by human
const Instance = require('../mocks/DeviceRenderer');
const Screenshot = require('../../src/plugins/Screenshot');
const Screenrecord = require('../../src/plugins/Screenrecord');
global.MediaRecorder = function () {};

describe('Capture Plugin', () => {
    let instance;

    describe('when capture option is true', () => {
        beforeEach(() => {
            const options = {
                capture: true,
            };
            instance = new Instance({options});
            new Screenshot(instance, {
                SCREENSHOT_TITLE: 'TEST CAPTURE PLUGIN BUTTON TITLE',
            });
            new Screenrecord(instance, {
                SCREENRECORD_TITLE: 'TEST CAPTURE PLUGIN BUTTON TITLE',
            });
        });

        it('should add Screenshot and Screenrecord buttons to toolbar', () => {
            const screenshotButton = document.querySelector('.gm-screenshot-button');
            const screenrecordButton = document.querySelector('.gm-screenrecord-button');
            const tooltip = document.querySelector('.gm-tooltip');

            screenshotButton.parentElement.dispatchEvent(new Event('mouseenter'));
            expect(tooltip.innerHTML).toEqual(expect.stringContaining('TEST CAPTURE PLUGIN BUTTON TITLE'));
            screenshotButton.parentElement.dispatchEvent(new Event('mouseleave'));

            screenrecordButton.parentElement.dispatchEvent(new Event('mouseenter'));
            expect(tooltip.innerHTML).toEqual(expect.stringContaining('TEST CAPTURE PLUGIN BUTTON TITLE'));
            screenrecordButton.parentElement.dispatchEvent(new Event('mouseleave'));

            expect(screenshotButton).toBeTruthy();
            expect(screenrecordButton).toBeTruthy();
        });
    });

    describe('when capture option is false', () => {
        beforeEach(() => {
            const options = {
                capture: false,
            };
            instance = new Instance({options});
        });

        it('should not add Screenshot and Screenrecord buttons to toolbar', () => {
            const screenshotButton = document.querySelector('.gm-screenshot-button');
            const screenrecordButton = document.querySelector('.gm-screenrecord-button');

            expect(screenshotButton).toBeFalsy();
            expect(screenrecordButton).toBeFalsy();
        });
    });
});
